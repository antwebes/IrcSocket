<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" 
				xmlns:rtc="http://ns.adobe.com/rtc">
	<mx:Script>
		<![CDATA[
			import com.adobe.rtc.collaboration.ScreenShareSubscriberComplex;
			import com.adobe.rtc.events.StreamEvent;
			import com.adobe.rtc.sharedManagers.descriptors.UserDescriptor;
			
			import mx.core.UIComponent;
			
			
			/**********************************************************
			 * ADOBE SYSTEMS INCORPORATED
			 * Copyright [2007-2010] Adobe Systems Incorporated
			 * All Rights Reserved.
			 * NOTICE: Adobe permits you to use, modify, and distribute this file in accordance with the 
			 * terms of the Adobe license agreement accompanying it.If you have received this file from a 
			 * source other than Adobe, then your use, modification, or distribution of it requires the prior 
			 * written permission of Adobe.
		     	 * *********************************/
			
			private function startSS():void
			{
				if(sspublisher != null && !sspublisher.isPublishing) {
					sspublisher.addEventListener(StreamEvent.STREAM_RECEIVE, onStreamReceived);
					sspublisher.addEventListener(StreamEvent.STREAM_DELETE, onStreamDelete);
					sspublisher.publish();
					startss_bt.enabled = false;
					stopss_bt.enabled = true;
					pause_bt.enabled = true;
				}
			}
			
			private function stopSS():void
			{
				if(sspublisher != null && sspublisher.isPublishing) {
					sspublisher.stop();
					startss_bt.enabled = true;
					stopss_bt.enabled = false;
					pause_bt.enabled = false;
				}
			}
			
			private function pauseSS():void
			{
				if(sspublisher != null && sspublisher.isPublishing) {
					if(pause_bt.label == "Pause Screen Sharing") {
						sspublisher.pause(true);
						pause_bt.label = "Resume Screen Sharing";
					}
					else{
						sspublisher.pause(false);
						pause_bt.label = "Pause Screen Sharing";
					}
				}
			}
			
			private function onStreamDelete(p_evt:StreamEvent):void
			{
				if(p_evt.streamDescriptor.streamPublisherID == publisherid.text && sspublisher.isPublishing)
				{
					sspublisher.stop();
					startss_bt.enabled = true;
					stopss_bt.enabled = false;
					pause_bt.enabled = false;
				}
			}
			
			private function onStreamReceived(p_evt:StreamEvent):void
			{
				
				var publisherDescriptor:UserDescriptor = null;
				if(p_evt.streamDescriptor.originalScreenPublisher != null)
					publisherDescriptor = cSession.userManager.getUserDescriptor(p_evt.streamDescriptor.originalScreenPublisher);
				else
					publisherDescriptor = cSession.userManager.getUserDescriptor(p_evt.streamDescriptor.streamPublisherID);
				
				var myDescriptor:UserDescriptor = cSession.userManager.getUserDescriptor(cSession.userManager.myUserID);
				
				
				if(publisherDescriptor.displayName == myDescriptor.displayName ||
					publisherDescriptor.userID.indexOf(myDescriptor.userID) >= 0){
					
					publisherid.text = p_evt.streamDescriptor.originalScreenPublisher;
			
				}
			}
			
			private function subscribe(p_comp:UIComponent, p_publisherid:String):void{
				var sss:ScreenShareSubscriberComplex= new ScreenShareSubscriberComplex();
				sss.connectSession = cSession;
				sss.publisherID = p_publisherid;
				sss.width = p_comp.width;
				sss.height = p_comp.height;
				sss.x = 0;
				sss.y = 0;
				p_comp.addChild(sss);
				p_comp.removeChild(label1);
				p_comp.removeChild(publisheridsub);
				p_comp.removeChild(mysubscribebutton);
			}
			
		]]>
	</mx:Script>
	
	<!-- 
	You would likely use external authentication here for a deployed application; 
	you would certainly not hard code Adobe IDs here.
	-->
	<rtc:AdobeHSAuthenticator 
		id="auth" 
		userName="Your Username" password="Your password"
		/>
	
	
	<rtc:ConnectSessionContainer backgroundAlpha="0.0" roomURL="Your RoomUrl" id="cSession" authenticator="{auth}" width="100%" height="100%"> 
		<mx:Canvas width="100%" height="100%"> 
			<rtc:ScreenSharePublisher id="sspublisher" playerVersion="10"/>
			<mx:HBox width="100%" height="5%"  horizontalAlign="center" verticalAlign="middle">
				<mx:HBox width="50%" height="5%" horizontalAlign="center" verticalAlign="middle">
					<mx:Label text="Publish Your Own Screen. Your Publisher ID:"/><mx:TextInput id="publisherid" text=""/>
					<mx:Button id="startss_bt" label="Start Screen Sharing" click="startSS()"/>
					<mx:Button id="pause_bt" label="Pause Screen Sharing" click="pauseSS()" enabled="false"/>
					<mx:Button id="stopss_bt" label="Stop Screen Sharing" click="stopSS()" enabled="false"/>
				</mx:HBox>
			</mx:HBox> 
			<mx:VBox width="100%" height="95%" horizontalAlign="center" verticalAlign="middle" id="displayArea">
				<mx:Label text="The Other Person's Publisher ID:" id="label1"/><mx:TextInput id="publisheridsub" text=""/>
				<mx:Button label="Start Subscribe To This Person ScreenShare" id="mysubscribebutton" click="subscribe(displayArea,publisheridsub.text)"/>
			</mx:VBox>
		</mx:Canvas> 
	</rtc:ConnectSessionContainer> 
	
</mx:Application>
